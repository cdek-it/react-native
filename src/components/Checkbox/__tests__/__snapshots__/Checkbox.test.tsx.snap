// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox snapshots checked = false, indeterminate = false, state = danger 1`] = `
<View>
  <View
    style={
      {
        "backgroundColor": "#f6d4d1",
        "borderRadius": 7,
        "height": 28,
        "position": "absolute",
        "width": 28,
      }
    }
  />
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderColor": "#e26e63",
        "borderRadius": 3.5,
        "borderWidth": 1,
        "height": 21,
        "justifyContent": "center",
        "marginLeft": 3.5,
        "marginTop": 3.5,
        "width": 21,
      }
    }
    testID="CheckboxButton_Pressable"
  />
</View>
`;

exports[`Checkbox snapshots checked = false, indeterminate = false, state = default 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "borderColor": "#dbdada",
        "borderRadius": 3.5,
        "borderWidth": 1,
        "height": 21,
        "justifyContent": "center",
        "marginLeft": 3.5,
        "marginTop": 3.5,
        "width": 21,
      }
    }
    testID="CheckboxButton_Pressable"
  />
</View>
`;

exports[`Checkbox snapshots checked = false, indeterminate = false, state = disabled 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 0, 0, 0.1000)",
        "borderColor": "#dbdada",
        "borderRadius": 3.5,
        "borderWidth": 1,
        "height": 21,
        "justifyContent": "center",
        "marginLeft": 3.5,
        "marginTop": 3.5,
        "width": 21,
      }
    }
    testID="CheckboxButton_Pressable"
  />
</View>
`;

exports[`Checkbox snapshots checked = true, indeterminate = false, state = danger 1`] = `
<View>
  <View
    style={
      {
        "backgroundColor": "#f6d4d1",
        "borderRadius": 7,
        "height": 28,
        "position": "absolute",
        "width": 28,
      }
    }
  />
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#188700",
        "borderColor": "#e26e63",
        "borderRadius": 3.5,
        "borderWidth": 1,
        "height": 21,
        "justifyContent": "center",
        "marginLeft": 3.5,
        "marginTop": 3.5,
        "width": 21,
      }
    }
    testID="CheckboxButton_Pressable"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={14}
      bbWidth={14}
      fill="none"
      focusable={false}
      height={14}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "color": "#ffffff",
            "height": 14,
            "width": 14,
          },
          {
            "flex": 0,
            "height": 14,
            "width": 14,
          },
        ]
      }
      tintColor="#ffffff"
      vbHeight={24}
      vbWidth={24}
      width={14}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        color="#ffffff"
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "type": 2,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          color="#ffffff"
          d="M5 12l5 5l10 -10"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "type": 2,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`Checkbox snapshots checked = true, indeterminate = false, state = default 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#188700",
        "borderColor": "#188700",
        "borderRadius": 3.5,
        "borderWidth": 1,
        "height": 21,
        "justifyContent": "center",
        "marginLeft": 3.5,
        "marginTop": 3.5,
        "width": 21,
      }
    }
    testID="CheckboxButton_Pressable"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={14}
      bbWidth={14}
      fill="none"
      focusable={false}
      height={14}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "color": "#ffffff",
            "height": 14,
            "width": 14,
          },
          {
            "flex": 0,
            "height": 14,
            "width": 14,
          },
        ]
      }
      tintColor="#ffffff"
      vbHeight={24}
      vbWidth={24}
      width={14}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        color="#ffffff"
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "type": 2,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          color="#ffffff"
          d="M5 12l5 5l10 -10"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "type": 2,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`Checkbox snapshots checked = true, indeterminate = false, state = disabled 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "grey",
        "borderColor": "grey",
        "borderRadius": 3.5,
        "borderWidth": 1,
        "height": 21,
        "justifyContent": "center",
        "marginLeft": 3.5,
        "marginTop": 3.5,
        "width": 21,
      }
    }
    testID="CheckboxButton_Pressable"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={14}
      bbWidth={14}
      fill="none"
      focusable={false}
      height={14}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "color": "#ffffff",
            "height": 14,
            "width": 14,
          },
          {
            "flex": 0,
            "height": 14,
            "width": 14,
          },
        ]
      }
      tintColor="#ffffff"
      vbHeight={24}
      vbWidth={24}
      width={14}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        color="#ffffff"
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "type": 2,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          color="#ffffff"
          d="M5 12l5 5l10 -10"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "type": 2,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`Checkbox snapshots checked = true, indeterminate = true, state = default 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#188700",
        "borderColor": "#188700",
        "borderRadius": 3.5,
        "borderWidth": 1,
        "height": 21,
        "justifyContent": "center",
        "marginLeft": 3.5,
        "marginTop": 3.5,
        "width": 21,
      }
    }
    testID="CheckboxButton_Pressable"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={14}
      bbWidth={14}
      fill="none"
      focusable={false}
      height={14}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "color": "#ffffff",
            "height": 14,
            "width": 14,
          },
          {
            "flex": 0,
            "height": 14,
            "width": 14,
          },
        ]
      }
      tintColor="#ffffff"
      vbHeight={24}
      vbWidth={24}
      width={14}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        color="#ffffff"
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "type": 2,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          color="#ffffff"
          d="M5 12l14 0"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "type": 2,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`Checkbox snapshots default 1`] = `
<View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    hitSlop={10}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "borderRadius": 3.5,
        "borderWidth": 1,
        "height": 21,
        "justifyContent": "center",
        "marginLeft": 3.5,
        "marginTop": 3.5,
        "width": 21,
      }
    }
    testID="CheckboxButton_Pressable"
  />
</View>
`;
