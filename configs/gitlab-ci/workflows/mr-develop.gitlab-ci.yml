include:
  - project: react-native/gitlab-ci
    file: /configs/cache.gitlab-ci.yml
  - project: react-native/gitlab-ci
    file: /configs/runners.gitlab-ci.yml
  - project: react-native/gitlab-ci
    file: /configs/rules.gitlab-ci.yml
  - project: react-native/gitlab-ci
    file: /jobs/yarn-install.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"

stages:
  - install
  - start_build
  - build
  - publish

variables:
  IMG_NODE: "node:18-alpine"
  REVIEWERS_LIST: "CHANGE_ME"
  REVIEW_CHAT_WEBHOOK: "CHANGE_ME"

start_build:
  stage: start_build
  extends:
    - .node_docker_runner
  script:
    - echo "Starting builds..."
  allow_failure: true
  interruptible: true
  when: manual

build:
  stage: build
  extends:
    - .yarn_install_build_dependent_job
  script:
    - npx yarn build
  artifacts:
    expire_in: 1 hour
    paths:
      - dist

publish_alpha:
  stage: publish
  extends:
    - .yarn_install_build_dependent_job
  before_script:
    - sed -i 's/dl-cdn.alpinelinux.org/repo.cdek.ru\/repository/g' /etc/apk/repositories
    - apk add --no-cache curl jq git
  script:
    - echo "{\"skip\":{\"changelog\":true,\"commit\":true,\"tag\":true}}" > .versionrc
    - npx yarn standard-version --prerelease alpha-$CI_MERGE_REQUEST_IID --no-verify
    - npx yarn config set npmAlwaysAuth true
    - npx yarn config set npmPublishRegistry "https://${ARTIFACTORY_PUBLISH_REPO}"
    - npx yarn config set npmRegistryServer "https://${ARTIFACTORY_PUBLISH_REPO}"
    - npx yarn config set npmAuthIdent "${ARTIFACTORY_LOGIN}:${ARTIFACTORY_PASS}"
    - npx yarn npm whoami
    - npm pkg set 'main'='./dist/index.js'
    - npm pkg set 'types'='./dist/index.d.ts'
    - npx yarn npm publish
    - |
      PACKAGE_NAME=$(jq -r ".name" package.json)
      PACKAGE_VERSION=$(jq -r ".version" package.json)
      PACKAGE_NAME_IN_CACHE=$(echo "$PACKAGE_NAME" | sed 's/\//-/g')
      curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
          --data-urlencode "body=Опубликована альфа версия пакета: ${PACKAGE_VERSION}. Вы можете установить её в проекте для тестирования функционала пакета.
          \`yarn add ${PACKAGE_NAME}@${PACKAGE_VERSION}\`. Если вы уже устанавливали данную версию prerelease то следует почистить проект и кэш перед установкой - \`yarn remove ${PACKAGE_NAME} && rm ~/.yarn/**/cache/${PACKAGE_NAME_IN_CACHE}-npm-${PACKAGE_VERSION}*\`. \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}/notes"
  needs:
    - job: build
      artifacts: true
      optional: false

## Reusable configs

### Build start dependent job config
.needs_start_build: &needs_start_build
  job: start_build
  artifacts: false
  optional: false

.needs_only_start_build:
  needs:
    - <<: *needs_start_build

.yarn_install_build_dependent_job:
  extends:
    - .node_docker_runner
    - .yarn_docker_cache_pull
  needs:
    - job: yarn_install
      artifacts: false
      optional: false
    - <<: *needs_start_build

### yarn install dependent job config
.needs_yarn_macos: &needs_yarn_macos
  job: yarn_install_mac
  artifacts: false
  optional: false

### Ruby install dependent job config
.needs_ruby_macos: &needs_ruby_macos
  job: ruby_install_mac
  artifacts: false
  optional: false

### Ruby, yarn and start build dependent job config
.needs_yarn_ruby_start_build:
  needs:
    - <<: *needs_start_build
    - <<: *needs_yarn_macos
    - <<: *needs_ruby_macos

### Pods install dependent job config
.needs_pods_macos: &needs_pods_macos
  job: pods_install_mac
  artifacts: false
  optional: false

### Native iOS dependent jobs configs
.needs_ios_dependencies:
  needs:
    - <<: *needs_yarn_macos
    - <<: *needs_ruby_macos
    - <<: *needs_pods_macos

### Native Android dependent jobs configs
.needs_android_dependencies:
  needs:
    - <<: *needs_yarn_macos
    - <<: *needs_ruby_macos

## Base iOS job config
.basic_ios_job:
  extends:
    - .macos_runner
    - .pods_macos_cache_pull
    - .enable_ios
    - .needs_ios_dependencies
  variables:
  #    TODO: Uncomment when Google Services plist added
  #    SECURE_FILES_DOWNLOAD_PATH: $IOS_PROJECT_PATH/secrets
  #    GOOGLE_SERVICES_PLIST_FILEPATH: $SECURE_FILES_DOWNLOAD_PATH/$GOOGLE_SERVICES_PLIST_FILENAME
