include:
  - local: /configs/gitlab-ci/configs/cache.gitlab-ci.yml
  - local: /configs/gitlab-ci/configs/runners.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^feature\/|^fix\//

stages:
  - install
  - validate
  - test

variables:
  IMG_NODE: "node:18-alpine"

yarn_install:
  stage: install
  interruptible: true
  extends:
    - .node_docker_runner
    - .yarn_docker_cache_pull_push
  variables:
    HTTP_PROXY: "http://runner-proxy.cdek.ru:9000"
    NO_PROXY: "repo.cdek.ru"
  before_script:
    - export HTTPS_PROXY="${HTTP_PROXY}"
    - export HTTP_PROXY="${HTTP_PROXY}"
    - export http_proxy="${HTTP_PROXY}"
    - export https_proxy="${HTTP_PROXY}"
    - export all_proxy="${HTTP_PROXY}"
    - export no_proxy="${NO_PROXY}"
  script:
    - npx yarn install --frozen-lockfile

lint: 
  stage: validate
  interruptible: true
  extends:
    - .yarn_install_dependent_job
  variables:
    ESLINT_CODE_QUALITY_REPORT: gl-codequality.json
  script:
    - npx yarn eslint --format gitlab .
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      codequality: gl-codequality.json

typecheck:
  stage: validate
  interruptible: true
  extends:
    - .yarn_install_dependent_job
  script:
    - npx yarn tsc --noEmit

unit_test:
  stage: test
  interruptible: true
  extends:
    - .yarn_install_dependent_job
  script:
    - npx yarn jest --passWithNoTests --ci --reporters=jest-junit --coverage
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit:
        - junit.xml

## Reusable configs

### Install stage dependent jobs config
.yarn_install_dependent_job:
  extends:
    - .node_docker_runner
    - .yarn_docker_cache_pull
  needs:
    - job: yarn_install
      artifacts: false
      optional: false
